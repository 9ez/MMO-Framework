<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">
<!-- saved from url=(0048)http://ogre3d.su/base_tutorials/Basic_Tutorial_3 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru" version="XHTML+RDFa 1.0" dir="ltr" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/terms/" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:og="http://ogp.me/ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:sioc="http://rdfs.org/sioc/ns#" xmlns:sioct="http://rdfs.org/sioc/types#" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:xsd="http://www.w3.org/2001/XMLSchema#" class="js"><head profile="http://www.w3.org/1999/xhtml/vocab"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
<meta property="og:site_name" content="Ogre 3D">
<meta property="og:url" content="http://www.ogre3d.su/base_tutorials/Basic_Tutorial_3">
<meta content="Глава 3 — Ландшафт, небо и туман" about="/base_tutorials/Basic_Tutorial_3" property="dc:title">
<meta about="/base_tutorials/Basic_Tutorial_3" property="sioc:num_replies" content="0" datatype="xsd:integer">
<link rel="shortcut icon" href="http://www.ogre3d.su/sites/default/files/favicon_0.ico" type="image/vnd.microsoft.icon">
<meta property="og:description" content="После прочтения этого урока Вы научитесь работать с ландшафтом (terrain), небом (sky) и туманом (fog) в ваших приложениях, и поймёте разницу между Skybox, Skyplane и Skydome. Кроме этого, в данном руководстве будет рассмотрено различие между типами тумана и способами их использования.">
<meta property="og:type" content="article">
<meta name="generator" content="Drupal 7 (http://drupal.org)">
<link rel="shortlink" href="http://ogre3d.su/node/35">
<link rel="canonical" href="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/Глава 3 — Ландшафт, небо и туман   Ogre 3D.htm">
<link rel="prev" href="http://ogre3d.su/Basic_Tutorial_1">
<link rel="up" href="http://ogre3d.su/base_tutorials">
<meta name="keywords" content="ogre, ogre3d, огре, огр, бесплатный, графический, движок, 3D, трёхмерный, трехмерный, ogre3d.ru, создание игр, игры, game, render, rendering, DirectX, OpenGL, 3д, си++, си, C++, с++, cpp, MyGUI, статьи, уроки, туториалы, tutorial, обучающие программы">
<meta name="description" content="После прочтения этого урока Вы научитесь работать с ландшафтом (terrain), небом (sky) и туманом (fog) в ваших приложениях, и поймёте разницу между Skybox, Skyplane и Skydome. Кроме этого, в данном руководстве будет рассмотрено различие между типами тумана и способами их использования.">
<meta property="og:title" content="Глава 3 — Ландшафт, небо и туман">
  <title>Глава 3 — Ландшафт, небо и туман | Ogre 3D</title>
  <style type="text/css" media="all">@import url("http://www.ogre3d.su/modules/system/system.base.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/system/system.menus.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/system/system.messages.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/system/system.theme.css?mj6fyy");</style>
<style type="text/css" media="all">@import url("http://www.ogre3d.su/modules/aggregator/aggregator.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/book/book.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/comment/comment.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/field/theme/field.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/node/node.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/poll/poll.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/search/search.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/user/user.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/views/css/views.css?mj6fyy");</style>
<style type="text/css" media="all">@import url("http://www.ogre3d.su/sites/all/modules/ckeditor/ckeditor.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/ctools/css/ctools.css?mj6fyy");
@import url("http://www.ogre3d.su/sites/all/modules/lightbox2/css/lightbox_alt.css?mj6fyy");
@import url("http://www.ogre3d.su/modules/panels/css/panels.css?mj6fyy");
@import url("http://www.ogre3d.su/sites/all/libraries/syntaxhighlighter_3.0.83/styles/shCore.css?mj6fyy");
@import url("http://www.ogre3d.su/sites/all/libraries/syntaxhighlighter_3.0.83/styles/shThemeDefault.css?mj6fyy");
@import url("http://www.ogre3d.su/sites/all/modules/tagclouds/tagclouds.css?mj6fyy");</style>
<style type="text/css" media="all">@import url("http://www.ogre3d.su/sites/default/files/color/garland-4d33b863/style.css?mj6fyy");</style>
<style type="text/css" media="print">@import url("http://www.ogre3d.su/themes/garland/print.css?mj6fyy");</style>

<!--[if lt IE 7]>
<link type="text/css" rel="stylesheet" href="http://www.ogre3d.su/themes/garland/fix-ie.css?mj6fyy" media="all" />
<![endif]-->
  <script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/jquery.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/jquery.once.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/drupal.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shCore.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushAS3.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushAppleScript.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushBash.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushBat.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushCMake.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushCSharp.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushColdFusion.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushCpp.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushCss.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushDelphi.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushDiff.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushErlang.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushGroovy.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushJScript.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushJava.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushJavaFX.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushLua.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushPerl.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushPhp.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushPlain.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushPowerShell.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushPython.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushRuby.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushSass.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushScala.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushSql.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushVb.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/shBrushXml.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/ru_LBNAppjuaDLiLoCexHJC8avf3zq278mAien0__oKu04.js"></script>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/lightbox.js"></script><style type="text/css"></style>
<script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/panels.js"></script>
<script type="text/javascript">
<!--//--><![CDATA[//><!--
jQuery.extend(Drupal.settings, {"basePath":"\/","pathPrefix":"","ajaxPageState":{"theme":"garland","theme_token":"shD9-a5flxSsPbmflQ8khO0Q6CBysYghV00FRDdTpkg","js":{"sites\/all\/modules\/syntaxhighlighter\/syntaxhighlighter.min.js":1,"misc\/jquery.js":1,"misc\/jquery.once.js":1,"misc\/drupal.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shCore.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushAS3.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushAppleScript.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushBash.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushBat.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushCMake.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushCSharp.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushColdFusion.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushCpp.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushCss.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushDelphi.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushDiff.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushErlang.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushGroovy.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushJScript.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushJava.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushJavaFX.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushLua.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushPerl.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushPhp.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushPlain.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushPowerShell.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushPython.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushRuby.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushSass.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushScala.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushSql.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushVb.js":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/scripts\/shBrushXml.js":1,"public:\/\/languages\/ru_LBNAppjuaDLiLoCexHJC8avf3zq278mAien0__oKu04.js":1,"sites\/all\/modules\/lightbox2\/js\/lightbox.js":1,"modules\/panels\/js\/panels.js":1},"css":{"modules\/system\/system.base.css":1,"modules\/system\/system.menus.css":1,"modules\/system\/system.messages.css":1,"modules\/system\/system.theme.css":1,"modules\/aggregator\/aggregator.css":1,"modules\/book\/book.css":1,"modules\/comment\/comment.css":1,"modules\/field\/theme\/field.css":1,"modules\/node\/node.css":1,"modules\/poll\/poll.css":1,"modules\/search\/search.css":1,"modules\/user\/user.css":1,"modules\/views\/css\/views.css":1,"sites\/all\/modules\/ckeditor\/ckeditor.css":1,"modules\/ctools\/css\/ctools.css":1,"sites\/all\/modules\/lightbox2\/css\/lightbox_alt.css":1,"modules\/panels\/css\/panels.css":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/styles\/shCore.css":1,"sites\/all\/libraries\/syntaxhighlighter_3.0.83\/styles\/shThemeDefault.css":1,"sites\/all\/modules\/tagclouds\/tagclouds.css":1,"themes\/garland\/style.css":1,"themes\/garland\/print.css":1,"themes\/garland\/fix-ie.css":1}},"lightbox2":{"rtl":"0","file_path":"\/(\\w\\w\/)public:\/","default_image":"\/sites\/all\/modules\/lightbox2\/images\/brokenimage.jpg","border_size":5,"font_color":"000","box_color":"fff","top_position":"","overlay_opacity":"0.7","overlay_color":"111","disable_close_click":1,"resize_sequence":0,"resize_speed":400,"fade_in_speed":400,"slide_down_speed":600,"use_alt_layout":1,"disable_resize":0,"disable_zoom":0,"force_show_nav":0,"show_caption":1,"loop_items":0,"node_link_text":"View Image Details","node_link_target":0,"image_count":"Image !current of !total","video_count":"Video !current of !total","page_count":"Page !current of !total","lite_press_x_close":"press \u003Ca href=\u0022#\u0022 onclick=\u0022hideLightbox(); return FALSE;\u0022\u003E\u003Ckbd\u003Ex\u003C\/kbd\u003E\u003C\/a\u003E to close","download_link_text":"","enable_login":false,"enable_contact":false,"keys_close":"c x 27","keys_previous":"p 37","keys_next":"n 39","keys_zoom":"z","keys_play_pause":"32","display_image_size":"original","image_node_sizes":"()","trigger_lightbox_classes":"","trigger_lightbox_group_classes":"","trigger_slideshow_classes":"","trigger_lightframe_classes":"","trigger_lightframe_group_classes":"","custom_class_handler":0,"custom_trigger_classes":"","disable_for_gallery_lists":true,"disable_for_acidfree_gallery_lists":true,"enable_acidfree_videos":true,"slideshow_interval":5000,"slideshow_automatic_start":true,"slideshow_automatic_exit":true,"show_play_pause":true,"pause_on_next_click":false,"pause_on_previous_click":true,"loop_slides":false,"iframe_width":900,"iframe_height":500,"iframe_border":1,"enable_video":0}});
//--><!]]>
</script>
</head>
<body class="html not-front not-logged-in one-sidebar sidebar-first page-node page-node- page-node-35 node-type-book fluid-width lightbox-processed">
  <div id="skip-link">
    <a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#main-content" class="element-invisible element-focusable">Перейти к основному содержанию</a>
  </div>
      
  <div id="wrapper">
    <div id="container" class="clearfix">

      <div id="header">
        <div id="logo-floater">
                              <div id="branding"><strong><a href="http://ogre3d.su/">
                          <img src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/site_logo_0.png" alt="Ogre 3D Свободный графический движок" title="Ogre 3D Свободный графический движок" id="logo">
                        <span>Ogre 3D</span> Свободный графический движок            </a></strong></div>
                          </div>

        <h2 class="element-invisible">Главное меню</h2><ul class="links inline main-menu"><li class="menu-249 first"><a href="http://ogre3d.su/" style="text-shadow: 0px 0px 2px #77ff00;">Главная</a></li>
<li class="menu-457"><a href="http://ogre3d.su/ref" title="Руководство" style="text-shadow: 0px 0px 2px #77ff00;">Руководство</a></li>
<li class="menu-832"><a href="http://ogre3d.su/api" title="Переведенное руководство по Ogre3D API " style="text-shadow: 0px 0px 2px #77ff00;" target="_blank">API</a></li>
<li class="menu-302"><a href="http://ogre3d.su/forum" title="Переход на форум сайта" style="text-shadow: 0px 0px 2px #77ff00;" target="_blank">Форум</a></li>
<li class="menu-303"><a href="http://ogre3d.su/chat" title="Jabber конференция" style="font-weight: bold;text-shadow: 0px 0px 3px #fff;" target="_blank">Чат</a></li>
<li class="menu-622 last"><a href="http://ogre3d.su/donate">Помощь сайту</a></li>
</ul>              </div> <!-- /#header -->

              <div id="sidebar-first" class="sidebar">
            <div class="region region-sidebar-first">
    <div id="block-system-navigation" class="block block-system block-menu clearfix">

    <h2 class="title">Главное меню</h2>
  
  <div class="content">
    <ul class="menu"><li class="first leaf"><a href="http://ogre3d.su/" title="Перейти на главную страницу">Главная</a></li>
<li class="leaf"><a href="http://ogre3d.su/news" title="Новости сайта">Новости</a></li>
<li class="expanded"><a href="http://ogre3d.su/book" title="Сборник всех документов сайта">Библиотека</a><ul class="menu"><li class="first leaf"><a href="http://ogre3d.su/tutorials" title="Уроки на сайте">Уроки</a></li>
<li class="leaf"><a href="http://ogre3d.su/references" title="Руководства на сайте">Руководства</a></li>
<li class="leaf"><a href="http://ogre3d.su/videotutorials" title="Видеоуроки на сайте">Видеоуроки</a></li>
<li class="last leaf"><a href="http://ogre3d.su/another" title="Различные материалы на сайте">Разное</a></li>
</ul></li>
<li class="leaf"><a href="http://ogre3d.su/forum" title="Перейти на форум" target="_blank">Форум</a></li>
<li class="leaf"><a href="http://ogre3d.su/api-reference" title="Русское руководство API по Ogre3D">Руководство по API Ogre3D</a></li>
<li class="leaf"><a href="http://ogre3d.su/chat" title="Перейти в онлайн-конференцию" target="_blank">Чат</a></li>
<li class="leaf"><a href="http://ogre3d.su/store" title="Хранилище файлов, ссылки на файлы в сети">Файлы</a></li>
<li class="leaf"><a href="http://ogre3d.su/links" title="Ссылки на интересные материалы в сети.">Ссылки</a></li>
<li class="leaf"><a href="http://ogre3d.su/tracker">Последние материалы</a></li>
<li class="leaf"><a href="http://ogre3d.su/glossary" title="Список статей отсортированный по алфавиту">Глоссарий</a></li>
<li class="last leaf"><a href="http://ogre3d.su/donate" title="Помочь сайту в развитии, перечислив немного денег.">Помочь сайту</a></li>
</ul>  </div>
</div>
<div id="block-user-login" class="block block-user clearfix">

    <h2 class="title">Вход на сайт</h2>
  
  <div class="content">
    <form action="http://ogre3d.su/base_tutorials/Basic_Tutorial_3?destination=node/35" method="post" id="user-login-form" accept-charset="UTF-8"><div><div class="form-item form-type-textfield form-item-name">
  <label for="edit-name">Имя пользователя <span class="form-required" title="Обязательно для заполнения.">*</span></label>
 <input type="text" id="edit-name" name="name" value="" size="15" maxlength="60" class="form-text required">
</div>
<div class="form-item form-type-password form-item-pass">
  <label for="edit-pass">Пароль <span class="form-required" title="Обязательно для заполнения.">*</span></label>
 <input type="password" id="edit-pass" name="pass" size="15" maxlength="60" class="form-text required">
</div>
<div class="item-list"><ul><li class="first"><a href="http://ogre3d.su/user/register" title="Регистрация">Регистрация</a></li>
<li class="last"><a href="http://ogre3d.su/user/password" title="Запросить новый пароль по электронной почте.">Забыли пароль?</a></li>
</ul></div><input type="hidden" name="form_build_id" value="form-V_lMOARybavW4L8Wxkls6DmVGkaOtvecRd6ecf7tLz8">
<input type="hidden" name="form_id" value="user_login_block">
<div class="form-actions form-wrapper" id="edit-actions"><input type="submit" id="edit-submit" name="op" value="Войти" class="form-submit"></div></div></form>  </div>
</div>
<div id="block-comment-recent" class="block block-comment clearfix">

    <h2 class="title">Коментарии</h2>
  
  <div class="content">
    <div class="item-list"><ul><li class="first"><a href="http://ogre3d.su/comment/36#comment-36">GSoC</a>&nbsp;<span>6 месяцев 21 час назад</span></li>
<li><a href="http://ogre3d.su/comment/35#comment-35">Интересно Ogre 2.0, будет</a>&nbsp;<span>9 месяцев 3 недели назад</span></li>
<li><a href="http://ogre3d.su/comment/34#comment-34">Картинка к новости</a>&nbsp;<span>11 месяцев 2 недели назад</span></li>
<li><a href="http://ogre3d.su/comment/33#comment-33">Смотрится отлично. Наверное,</a>&nbsp;<span>1 год 1 неделя назад</span></li>
<li class="last"><a href="http://ogre3d.su/comment/32#comment-32">Да, это тоже у меня в планах,</a>&nbsp;<span>1 год 3 месяца назад</span></li>
</ul></div>  </div>
</div>
<div id="block-user-online" class="block block-user clearfix">

    <h2 class="title">Сейчас на сайте</h2>
  
  <div class="content">
    <p>Пользователей онлайн: 0.</p>  </div>
</div>
  </div>
        </div>
      
      <div id="center"><div id="squeeze"><div class="right-corner"><div class="left-corner">
          <h2 class="element-invisible">Вы здесь</h2><div class="breadcrumb"><a href="http://ogre3d.su/">Главная</a> › <a href="http://ogre3d.su/base_tutorials">Базовое руководство</a></div>                    <a id="main-content"></a>
          <div id="tabs-wrapper" class="clearfix">                                <h1 class="with-tabs">Глава 3 — Ландшафт, небо и туман</h1>
                              </div>                                                  <div class="clearfix">
              <div class="region region-content">
    <div id="block-system-main" class="block block-system clearfix">

    
  <div class="content">
    <div id="node-35" class="node node-book" about="/base_tutorials/Basic_Tutorial_3" typeof="sioc:Item foaf:Document">

  
      
      <span class="submitted"><span property="dc:date dc:created" content="2012-02-11T15:29:33+03:00" datatype="xsd:dateTime" rel="sioc:has_creator">сб, 02/11/2012 - 15:29 — <span class="username" xml:lang="" about="/user/5" typeof="sioc:UserAccount" property="foaf:name">slymit</span></span></span>
  
  <div class="content clearfix">
    <div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p><span style="color:#ff0000;">Любые проблемы и вопросы, возникшие при работе с данным руководством, размещайте в <a href="http://ogre3d.su/forum/viewtopic.php?f=37&t=12" target="_blank">этой</a> теме форума.</span></p>
<h2>
	Необходимые знания</h2>
<ul><li>
		Это руководство подразумевает, что у Вас есть навыки программирования на C++, и Вы в состоянии установить и скомпилировать приложение с помощью Ogre;</li>
<li>
		Также подразумевается, что Вы создали проект, используя <a href="http://www.ogre3d.org/tikiwiki/Ogre+Wiki+Tutorial+Framework" target="_blank">Ogre Wiki Tutorial Framework</a>, либо вручную, используя CMake или Ogre AppWizard - для получения подробностей смотрите раздел "Настройка приложения" (<a href="http://www.ogre3d.org/tikiwiki/Setting+Up+An+Application" target="_blank">Setting Up An Application</a>);</li>
<li>
		Этот урок построен на предыдущих базовых руководствах, и, предполагается, что Вы уже изучили их.</li>
</ul><p>По мере чтения этого урока, добавляйте исходный код в свой проект, и наблюдайте за результатами. Не пренебрегайте практикой! Полный исходный код данного руководство Вы сможете найти <a href="http://www.ogre3d.org/tikiwiki/BasicTutorial3Source" target="_blank">здесь</a>. Сравнивайте Ваш код с этим листингом при возникновении проблем.</p>
<h2>
	Приступая к работе</h2>
<p>В предыдущих версиях Ogre Вы должны были использовать <a href="http://www.ogre3d.org/tikiwiki/Terrain+Scene+Manager" target="_blank">Terrain Scene Manager</a> eсли хотели ввести поддержку ландшафта в ваше приложение. Теперь в этом нет необходимости благодаря новой системе ландшафта Ogre (<a href="http://www.ogre3d.org/tikiwiki/Ogre+Terrain+System" target="_blank">Ogre Terrain System</a>).</p>
<p>Начиная с Ogre 1.7 (Cthugha), стали доступны следующие три компонента: Terrain, Paging и Property. Terrain и Paging связаны между собой (Ogre Terrain использует компонент Paging для динамической подгрузки ландшафта).&nbsp;Это руководство научит Вас основам использования компонента Ogre Terrain, Paging будет рассмотрен в следующих уроках.</p>
<h3>
	Листинг программы</h3>
<p>Измените заголовочный файл вашего класса BasicTutorial3 таким образом:</p>
<div><div id="highlighter_363851" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// Файл BasicTutorial3.h</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;Terrain/OgreTerrain.h&gt;</code></div><div class="line number4 index3 alt1"><code class="cpp preprocessor">#include &lt;Terrain/OgreTerrainGroup.h&gt;</code></div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#include "BaseApplication.h"</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp keyword bold">class</code> <code class="cpp plain">BasicTutorial3 : </code><code class="cpp keyword bold">public</code> <code class="cpp plain">BaseApplication</code></div><div class="line number8 index7 alt1"><code class="cpp plain">{</code></div><div class="line number9 index8 alt2"><code class="cpp keyword bold">private</code><code class="cpp plain">:</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::TerrainGlobalOptions* mTerrainGlobals;</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::TerrainGroup* mTerrainGroup;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">mTerrainsImported;</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">defineTerrain(</code><code class="cpp color1 bold">long</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">long</code> <code class="cpp plain">y);</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">initBlendMaps(Ogre::Terrain* terrain);</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">configureTerrainDefaults(Ogre::Light* light);</code></div><div class="line number17 index16 alt2"><code class="cpp keyword bold">public</code><code class="cpp plain">:</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">BasicTutorial3(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">virtual</code> <code class="cpp plain">~BasicTutorial3(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number21 index20 alt2"><code class="cpp keyword bold">protected</code><code class="cpp plain">:</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">virtual</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">createScene(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">virtual</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">createFrameListener(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">virtual</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">destroyScene(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">virtual</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">frameRenderingQueued(</code><code class="cpp keyword bold">const</code> <code class="cpp plain">Ogre::FrameEvent&amp; evt);</code></div><div class="line number26 index25 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>Убедитесь что ваш .cpp файл выглядит так (до функции main()):</p>
<div><div id="highlighter_588995" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// Файл BasicTutorial3.cpp</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#include "BasicTutorial3.h"</code></div><div class="line number4 index3 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number5 index4 alt2"><code class="cpp plain">BasicTutorial3::BasicTutorial3(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number6 index5 alt1"><code class="cpp plain">{</code></div><div class="line number7 index6 alt2"><code class="cpp plain">}</code></div><div class="line number8 index7 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number9 index8 alt2"><code class="cpp plain">BasicTutorial3::~BasicTutorial3(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number10 index9 alt1"><code class="cpp plain">{</code></div><div class="line number11 index10 alt2"><code class="cpp plain">}</code></div><div class="line number12 index11 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number13 index12 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::destroyScene(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number14 index13 alt1"><code class="cpp plain">{</code></div><div class="line number15 index14 alt2"><code class="cpp plain">}</code></div><div class="line number16 index15 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number17 index16 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">getTerrainImage(</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">flipX, </code><code class="cpp color1 bold">bool</code> <code class="cpp plain">flipY, Ogre::Image&amp; img)</code></div><div class="line number18 index17 alt1"><code class="cpp plain">{</code></div><div class="line number19 index18 alt2"><code class="cpp plain">}</code></div><div class="line number20 index19 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number21 index20 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::defineTerrain(</code><code class="cpp color1 bold">long</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">long</code> <code class="cpp plain">y)</code></div><div class="line number22 index21 alt1"><code class="cpp plain">{</code></div><div class="line number23 index22 alt2"><code class="cpp plain">}</code></div><div class="line number24 index23 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number25 index24 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::initBlendMaps(Ogre::Terrain* terrain)</code></div><div class="line number26 index25 alt1"><code class="cpp plain">{</code></div><div class="line number27 index26 alt2"><code class="cpp plain">}</code></div><div class="line number28 index27 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number29 index28 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::configureTerrainDefaults(Ogre::Light* light)</code></div><div class="line number30 index29 alt1"><code class="cpp plain">{</code></div><div class="line number31 index30 alt2"><code class="cpp plain">}</code></div><div class="line number32 index31 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number33 index32 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::createScene(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number34 index33 alt1"><code class="cpp plain">{</code></div><div class="line number35 index34 alt2"><code class="cpp plain">}</code></div><div class="line number36 index35 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number37 index36 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::createFrameListener(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number38 index37 alt1"><code class="cpp plain">{</code></div><div class="line number39 index38 alt2"><code class="cpp plain">}</code></div><div class="line number40 index39 alt1"><code class="cpp comments">//-------------------------------------------------------------------------------------</code></div><div class="line number41 index40 alt2"><code class="cpp color1 bold">bool</code> <code class="cpp plain">BasicTutorial3::frameRenderingQueued(</code><code class="cpp keyword bold">const</code> <code class="cpp plain">Ogre::FrameEvent&amp; evt)</code></div><div class="line number42 index41 alt1"><code class="cpp plain">{</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">ret = BaseApplication::frameRenderingQueued(evt);</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">ret;</code></div><div class="line number45 index44 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><h3>
	Настройки проекта</h3>
<h4>
	Visual Studio</h4>
<p>Для того чтобы скомпилировать код, необходимо прилинковать библиотеку компонента Terrain, т.е. добавьте ссылку на библиотеку "OgreTerrain.lib" для Release конфигурации вашего проекта, и "OgreTerrain_d.lib" для Debug версии соответственно.&nbsp;Чтобы сделать это, щелкните правой кнопкой мыши по проекту BasicTutorial3 в окне обозревателя решений (Solution Window).&nbsp;Выберите пункт Свойства (Properties). Появится окно Configuration manager. Выберите конфигурацию из выпадающего меню слева вверху, затем перейдите по пути Configuration properties -&gt; Linker -&gt; Input и добавьте ссылку на файл.</p>
<p><img alt="Настройки проекта Ogre3d в Visual Studio" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/ogre3d_vs_project_settings.png" style="width: 640px; height: 454px; "></p>
<h4>
	CMake</h4>
<p>Если вы используете систему сборки CMake, добавьте следующий код в файл CMakeLists.txt после строки "find_package(OGRE REQUIRED)", чтобы система сборки CMake знала о зависимости:</p>
<div><div id="highlighter_702160" class="syntaxhighlighter  plain"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain"># Add OgreTerrain.{so,dll,etc.} to our linked libraries</code></div><div class="line number2 index1 alt1"><code class="plain plain"># These variables are defined in FindOGRE.cmake, mine is</code></div><div class="line number3 index2 alt2"><code class="plain plain"># found at /usr/local/lib/OGRE/cmake/</code></div><div class="line number4 index3 alt1"><code class="plain plain">if (OGRE_Terrain_FOUND)</code></div><div class="line number5 index4 alt2"><code class="plain plain"># pretty sure the following include is unneeded</code></div><div class="line number6 index5 alt1"><code class="plain spaces">&nbsp;&nbsp;</code><code class="plain plain"># include_directories(${OGRE_Terrain_INCLUDE_DIRS})</code></div><div class="line number7 index6 alt2"><code class="plain plain"># append OgreTerrain to the end of the OGRE_LIBRARIES variable</code></div><div class="line number8 index7 alt1"><code class="plain plain">set(OGRE_LIBRARIES ${OGRE_LIBRARIES} ${OGRE_Terrain_LIBRARIES})&nbsp; </code></div><div class="line number9 index8 alt2"><code class="plain plain">message(STATUS "Found OGRE_Terrain: ${OGRE_Terrain_LIBRARIES}")</code></div><div class="line number10 index9 alt1"><code class="plain plain">else (OGRE_Terrain_FOUND)</code></div><div class="line number11 index10 alt2"><code class="plain spaces">&nbsp;&nbsp;</code><code class="plain plain">message(SEND_ERROR "OgreTerrain Library not found.")</code></div><div class="line number12 index11 alt1"><code class="plain plain">endif(OGRE_Terrain_FOUND)</code></div></div></td></tr></tbody></table></div></div><h4>
	AutoTools</h4>
<p>Если вы используете систему сборки autotools, следуйте инструкциям в документе "Настройка приложения при помощи autotools" ("<a href="http://www.ogre3d.org/tikiwiki/tiki-index.php?page=Setting+Up+An+Application+-+Autotools+-+Linux#http_www_ogre3d_org_tikiwiki_Setting_Up_An_Application_Autotools_Linux" target="_blank">Setting Up An Application with the autotools</a>") для создания файла конфигурации configure.ac, включающего компонент Terrain.&nbsp;</p>
<p>Ваш файл configure.ac&nbsp;должен выглядеть так:</p>
<div><div id="highlighter_522621" class="syntaxhighlighter  plain"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">AC_INIT(configure.ac)</code></div><div class="line number2 index1 alt1"><code class="plain plain">AM_INIT_AUTOMAKE(tuto3, 0.1)</code></div><div class="line number3 index2 alt2"><code class="plain plain">AM_CONFIG_HEADER(config.h)</code></div><div class="line number4 index3 alt1"><code class="plain spaces">&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="plain plain">AC_LANG_CPLUSPLUS</code></div><div class="line number6 index5 alt1"><code class="plain plain">AC_PROG_CXX</code></div><div class="line number7 index6 alt2"><code class="plain plain">AM_PROG_LIBTOOL</code></div><div class="line number8 index7 alt1"><code class="plain spaces">&nbsp;</code>&nbsp;</div><div class="line number9 index8 alt2"><code class="plain plain">PKG_CHECK_MODULES(OGRE, [OGRE &gt;= 1.2 OGRE-Terrain &gt;= 1.7.1])</code></div><div class="line number10 index9 alt1"><code class="plain plain">AC_SUBST(OGRE_CFLAGS)</code></div><div class="line number11 index10 alt2"><code class="plain plain">AC_SUBST(OGRE_LIBS)</code></div><div class="line number12 index11 alt1"><code class="plain spaces">&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="plain plain">PKG_CHECK_MODULES(OIS, [OIS &gt;= 1.0])</code></div><div class="line number14 index13 alt1"><code class="plain plain">AC_SUBST(OIS_CFLAGS)</code></div><div class="line number15 index14 alt2"><code class="plain plain">AC_SUBST(OIS_LIBS)</code></div><div class="line number16 index15 alt1"><code class="plain spaces">&nbsp;</code>&nbsp;</div><div class="line number17 index16 alt2"><code class="plain plain">AC_CONFIG_FILES(Makefile)</code></div><div class="line number18 index17 alt1"><code class="plain plain">AC_OUTPUT</code></div></div></td></tr></tbody></table></div></div><h2>
	Ландшафт</h2>
<p dir="ltr">Проект, который мы создадим в этой части руководства содержит два основных класса: <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1TerrainGroup.html" target="_blank">TerrainGroup</a> и <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1Terrain.html" target="_blank">Terrain</a>.&nbsp;Существует также класс <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1TerrainGlobalOptions.html" target="_blank">TerrainGlobalOptions</a>, но он используется как вспомогательный компонент.&nbsp;Класс TerrainGroup представляет собой небольшой кусок земли типа поляны, луга или игрового поля. TerrainGroup может содержать внутри себя множество частей ландшафта.&nbsp;Такое разбиение используется для отрисовки LOD'ов (уровня детализации) в зависимости от расстояния от камеры до каждой части ландшафта.&nbsp;В свою очередь Terrain состоит из своеобразной плитки (полигонов) с натянутой на них текстурой.&nbsp;Мы будем использовать один объект TerrainGroup без использования подкачки (пейджинга). Системы ландшафта использующие пейджинг будут описаны в других уроках.</p>
<p dir="ltr">Перед рендерингом ландшафта мы должны установить все необходимые параметры системы ландшафта Ogre (<a href="http://www.ogre3d.org/tikiwiki/Ogre+Terrain+System" target="_blank">Ogre Terrain System</a>).</p>
<h3 dir="ltr">
	Работа с камерой</h3>
<p>Изменим наш объект камера для лучшей визуализации ландшафта.</p>
<p>Добавьте этот код в функцию createScene класса BasicTutorial3 (BasicTutorial3::createScene):</p>
<div><div id="highlighter_912734" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mCamera-&gt;setPosition(Ogre::Vector3(1683, 50, 2116));</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mCamera-&gt;lookAt(Ogre::Vector3(1963, 50, 1660));</code></div><div class="line number3 index2 alt2"><code class="cpp plain">mCamera-&gt;setNearClipDistance(0.1);</code></div><div class="line number4 index3 alt1"><code class="cpp plain">mCamera-&gt;setFarClipDistance(50000);</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number6 index5 alt1"><code class="cpp keyword bold">if</code> <code class="cpp plain">(mRoot-&gt;getRenderSystem()-&gt;getCapabilities()-&gt;hasCapability(Ogre::RSC_INFINITE_FAR_PLANE))</code></div><div class="line number7 index6 alt2"><code class="cpp plain">{</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mCamera-&gt;setFarClipDistance(0);&nbsp;&nbsp; </code><code class="cpp comments">// enable infinite far clip distance if we can</code></div><div class="line number9 index8 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>Помимо установки позиции и ориентации камеры, этот код устанавливает ближнюю (near) и дальнюю (far) дистанцию отсечения.&nbsp;Нам необходимо чтобы наша камера могла видеть достаточно далеко, т.к. ландшафты обычно имеют большой размер, поэтому сделаем расстояние до дальней плоскости отсечения бесконечным (если система визуализации поддерживает такую возможность).</p>
<h3>
	Настройка направленного и окружающего освещения</h3>
<p>Компонент Terrain использует направленный свет для расчета собственной карты освещения, поэтому помещаем на сцену источник такого освещения:</p>
<div><div id="highlighter_273275" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">Ogre::Vector3 lightdir(0.55, -0.3, 0.75);</code></div><div class="line number2 index1 alt1"><code class="cpp plain">lightdir.normalise();</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp plain">Ogre::Light* light = mSceneMgr-&gt;createLight(</code><code class="cpp string">"tstLight"</code><code class="cpp plain">);</code></div><div class="line number5 index4 alt2"><code class="cpp plain">light-&gt;setType(Ogre::Light::LT_DIRECTIONAL);</code></div><div class="line number6 index5 alt1"><code class="cpp plain">light-&gt;setDirection(lightdir);</code></div><div class="line number7 index6 alt2"><code class="cpp plain">light-&gt;setDiffuseColour(Ogre::ColourValue::White);</code></div><div class="line number8 index7 alt1"><code class="cpp plain">light-&gt;setSpecularColour(Ogre::ColourValue(0.4, 0.4, 0.4));</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number10 index9 alt1"><code class="cpp plain">mSceneMgr-&gt;setAmbientLight(Ogre::ColourValue(0.2, 0.2, 0.2));</code></div></div></td></tr></tbody></table></div></div><p>Также устанавливаем некоторый уровень окружающего освещения чтобы сделать переходы между границами света и тени более размытыми.</p>
<h3>
	Настраиваем наш ландшафт</h3>
<p>Сперва мы создадим новый набор глобальных свойств для объекта Terrain, используя для этого класс&nbsp;TerrainGlobalOptions.&nbsp;Этот класс содержит настройки по умолчанию для всех объектов ландшафта, которые мы будем создавать, а также предоставляет функции для получения и установки этих настроек.&nbsp;Также для каждого объекта TerrainGroup существует локальная настройка DefaultImportSettings, которую мы рассмотрим позже.</p>
<div><div id="highlighter_710863" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mTerrainGlobals = OGRE_NEW Ogre::TerrainGlobalOptions();</code></div></div></td></tr></tbody></table></div></div><p>Затем создадим объект TerrainGroup - вспомогательный класс, обеспечивающий управление сеткой ландшафта, но не выполняющий динамической подгрузки, которую берёт на себя Paging (компонент&nbsp;Paging рассмотрим в следующих уроках).</p>
<div><div id="highlighter_643009" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mTerrainGroup = OGRE_NEW Ogre::TerrainGroup(mSceneMgr, Ogre::Terrain::ALIGN_X_Z, 513, 12000.0f);</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mTerrainGroup-&gt;setFilenameConvention(Ogre::String(</code><code class="cpp string">"BasicTutorial3Terrain"</code><code class="cpp plain">), Ogre::String(</code><code class="cpp string">"dat"</code><code class="cpp plain">));</code></div><div class="line number3 index2 alt2"><code class="cpp plain">mTerrainGroup-&gt;setOrigin(Ogre::Vector3::ZERO);</code></div></div></td></tr></tbody></table></div></div><p>Конструктор TerrainGroup в качестве параметров принимает ссылку на экземпляр SceneManager, параметр выравнивания (в какой плоскости будет находиться ландшафт), количество вершин по стороне одного куска ландшафта и размер этого куска в мировых координатах.&nbsp;Затем мы указываем TerrainGroup, какое имя использовать при сохранении нашего ландшафта, используя функцию setFilenameConvention.&nbsp;И напоследок указываем начало координат внутри данной группы ландшафта.</p>
<p>Пришло время настройки нашего ландшафта:</p>
<div><div id="highlighter_835348" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">configureTerrainDefaults(light);</code></div></div></td></tr></tbody></table></div></div><p>С функцией configureTerrainDefaults мы познакомимся позже.&nbsp;Обратите внимание, что в качестве параметра она принимает наш источник направленного освещения.</p>
<p>Теперь определяем все куски ландшафта и приказываем TerrainGroup загрузить их:</p>
<div><div id="highlighter_391085" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">long</code> <code class="cpp plain">x = 0; x &lt;= 0; ++x)</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">long</code> <code class="cpp plain">y = 0; y &lt;= 0; ++y)</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defineTerrain(x, y);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp comments">// sync load since we want everything in place when we start</code></div><div class="line number6 index5 alt1"><code class="cpp plain">mTerrainGroup-&gt;loadAllTerrains(</code><code class="cpp keyword bold">true</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div><p>Мы создаем только один ландшафт, поэтому вызываем функцию defineTerrain один раз.&nbsp;Более подробно с функцией defineTerrain познакомимся позднее.</p>
<p>Так как мы впервые импортировали куски ландшафта, нам необходимо рассчитать карты смешивания (blendmaps):</p>
<div><div id="highlighter_488256" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">if</code> <code class="cpp plain">(mTerrainsImported)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::TerrainGroup::TerrainIterator ti = mTerrainGroup-&gt;getTerrainIterator();</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(ti.hasMoreElements())</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Terrain* t = ti.getNext()-&gt;instance;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">initBlendMaps(t);</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number9 index8 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>Этот цикл перебирает все доступные нам куски ландшафтов и у каждого вызывает функцию initBlendMaps.&nbsp;Описание этой функции будет дано позднее.</p>
<p>Теперь все, что осталось сделать - это подчистить за собой мусор, оставшийся после начального создания ландшафта:&nbsp;</p>
<div><div id="highlighter_914674" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mTerrainGroup-&gt;freeTemporaryResources();</code></div></div></td></tr></tbody></table></div></div><h3>
	Функция&nbsp;createScene</h3>
<p>В данный момент функция createScene() класса BasicTutorial3 должна выглядеть так:</p>
<div><div id="highlighter_953143" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::createScene(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mCamera-&gt;setPosition(Ogre::Vector3(1683, 50, 2116));</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mCamera-&gt;lookAt(Ogre::Vector3(1963, 50, 1660));</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mCamera-&gt;setNearClipDistance(0.1);</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mCamera-&gt;setFarClipDistance(50000);</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(mRoot-&gt;getRenderSystem()-&gt;getCapabilities()-&gt;hasCapability(Ogre::RSC_INFINITE_FAR_PLANE))</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mCamera-&gt;setFarClipDistance(0);&nbsp;&nbsp; </code><code class="cpp comments">// enable infinite far clip distance if we can</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::MaterialManager::getSingleton().setDefaultTextureFiltering(Ogre::TFO_ANISOTROPIC);</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::MaterialManager::getSingleton().setDefaultAnisotropy(7);</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Vector3 lightdir(0.55, -0.3, 0.75);</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">lightdir.normalise();</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Light* light = mSceneMgr-&gt;createLight(</code><code class="cpp string">"tstLight"</code><code class="cpp plain">);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">light-&gt;setType(Ogre::Light::LT_DIRECTIONAL);</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">light-&gt;setDirection(lightdir);</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">light-&gt;setDiffuseColour(Ogre::ColourValue::White);</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">light-&gt;setSpecularColour(Ogre::ColourValue(0.4, 0.4, 0.4));</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mSceneMgr-&gt;setAmbientLight(Ogre::ColourValue(0.2, 0.2, 0.2));</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGlobals = OGRE_NEW Ogre::TerrainGlobalOptions();</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup = OGRE_NEW Ogre::TerrainGroup(mSceneMgr, Ogre::Terrain::ALIGN_X_Z, 513, 12000.0f);</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup-&gt;setFilenameConvention(Ogre::String(</code><code class="cpp string">"BasicTutorial3Terrain"</code><code class="cpp plain">), Ogre::String(</code><code class="cpp string">"dat"</code><code class="cpp plain">));</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup-&gt;setOrigin(Ogre::Vector3::ZERO);</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">configureTerrainDefaults(light);</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">long</code> <code class="cpp plain">x = 0; x &lt;= 0; ++x)</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">long</code> <code class="cpp plain">y = 0; y &lt;= 0; ++y)</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defineTerrain(x, y);</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// sync load since we want everything in place when we start</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup-&gt;loadAllTerrains(</code><code class="cpp keyword bold">true</code><code class="cpp plain">);</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(mTerrainsImported)</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::TerrainGroup::TerrainIterator ti = mTerrainGroup-&gt;getTerrainIterator();</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(ti.hasMoreElements())</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Terrain* t = ti.getNext()-&gt;instance;</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">initBlendMaps(t);</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup-&gt;freeTemporaryResources();</code></div><div class="line number53 index52 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p><span style="color:#ff0000;">Не пытайтесь скомпилировать программу сейчас - она не будет работать, поскольку мы ещё не реализовали несколько служебных функций!</span></p>
<h3>
	Функция configureTerrainDefaults&nbsp;</h3>
<p>Компонент Ogre Terrain довольно хорошо настраивается.&nbsp;mTerrainGlobals - это экземпляр класса Ogre::TerrainGlobalOptions.</p>
<p>Найдите функцию configureTerrainDefaults и добавьте следующий код:</p>
<div><div id="highlighter_986978" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// Configure global</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mTerrainGlobals-&gt;setMaxPixelError(8);</code></div><div class="line number3 index2 alt2"><code class="cpp comments">// testing composite map</code></div><div class="line number4 index3 alt1"><code class="cpp plain">mTerrainGlobals-&gt;setCompositeMapDistance(3000);</code></div></div></td></tr></tbody></table></div></div><p>Здесь мы определили две глобальные опции: MaxPixelError и CompositeMapDistance.&nbsp;MaxPixelError определяет насколько точным будет наш ландшафт.&nbsp;Меньшее значение этого параметра будет означать более качественный ландшафт за счет большей нагрузки на компьютер (из-за увеличения количества полигонов).&nbsp;CompositeMapDistance определяет на каком расстоянии от нас будет отрисовываться освещенный ландшафт (на большем расстоянием ландшафт будет рендериться без учета освещения).</p>
<p>Далее, разберемся с картой освещения, используя наш источник направленного освещения:</p>
<div><div id="highlighter_150183" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// Important to set these so that the terrain knows what to use for derived (non-realtime) data</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mTerrainGlobals-&gt;setLightMapDirection(light-&gt;getDerivedDirection());</code></div><div class="line number3 index2 alt2"><code class="cpp plain">mTerrainGlobals-&gt;setCompositeMapAmbient(mSceneMgr-&gt;getAmbientLight());</code></div><div class="line number4 index3 alt1"><code class="cpp plain">mTerrainGlobals-&gt;setCompositeMapDiffuse(light-&gt;getDiffuseColour());</code></div></div></td></tr></tbody></table></div></div><p>Здесь мы используем источник света для установки направления и цвета рассеянного освещения, в то время как цвет окружающего освещения берется из параметров менеджера сцены.</p>
<p>Далее определим некоторые значения ImportData:&nbsp;</p>
<div><div id="highlighter_459560" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// Configure default import settings for if we use imported image</code></div><div class="line number2 index1 alt1"><code class="cpp plain">Ogre::Terrain::ImportData&amp; defaultimp = mTerrainGroup-&gt;getDefaultImportSettings();</code></div><div class="line number3 index2 alt2"><code class="cpp plain">defaultimp.terrainSize = 513;</code></div><div class="line number4 index3 alt1"><code class="cpp plain">defaultimp.worldSize = 12000.0f;</code></div><div class="line number5 index4 alt2"><code class="cpp plain">defaultimp.inputScale = 600; </code><code class="cpp comments">// due terrain.png is 8 bpp</code></div><div class="line number6 index5 alt1"><code class="cpp plain">defaultimp.minBatchSize = 33;</code></div><div class="line number7 index6 alt2"><code class="cpp plain">defaultimp.maxBatchSize = 65;</code></div></div></td></tr></tbody></table></div></div><p>В этом уроке мы не будем останавливаться на том, что это за значения и какими они могут быть, но отметим, что параметры terrainSize и worldSize установлены таким образом, что они совпадают с нашими глобальными размерами (которые мы задали в конструкторе TerrainGroup), а параметр inputScale определяет степень увеличения (масштаб) изображения карты высот (heightmap).&nbsp;Здесь мы используем масштабирование, поскольку изображения имеют ограниченную точность представления (замечание: вы можете использовать карты высот с необработанными значениями с плавающей точкой для того, чтобы избежать использования параметра inputScale, но эти карты обычно используют сжатие с потерями. В этом случае вы можете установить параметр inputScale равным 1).&nbsp;Карту высот (heightmap), например, с необработанными значениями, обычно не нужно масштабировать, поскольку ее значения сохранены в виде массива неотмасштабированных чисел с плавающей точкой.</p>
<p>И наконец последний шаг - добавим текстуры:</p>
<div><div id="highlighter_379839" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// textures</code></div><div class="line number2 index1 alt1"><code class="cpp plain">defaultimp.layerList.resize(3);</code></div><div class="line number3 index2 alt2"><code class="cpp plain">defaultimp.layerList[0].worldSize = 100;</code></div><div class="line number4 index3 alt1"><code class="cpp plain">defaultimp.layerList[0].textureNames.push_back(</code><code class="cpp string">"dirt_grayrocky_diffusespecular.dds"</code><code class="cpp plain">);</code></div><div class="line number5 index4 alt2"><code class="cpp plain">defaultimp.layerList[0].textureNames.push_back(</code><code class="cpp string">"dirt_grayrocky_normalheight.dds"</code><code class="cpp plain">);</code></div><div class="line number6 index5 alt1"><code class="cpp plain">defaultimp.layerList[1].worldSize = 30;</code></div><div class="line number7 index6 alt2"><code class="cpp plain">defaultimp.layerList[1].textureNames.push_back(</code><code class="cpp string">"grass_green-01_diffusespecular.dds"</code><code class="cpp plain">);</code></div><div class="line number8 index7 alt1"><code class="cpp plain">defaultimp.layerList[1].textureNames.push_back(</code><code class="cpp string">"grass_green-01_normalheight.dds"</code><code class="cpp plain">);</code></div><div class="line number9 index8 alt2"><code class="cpp plain">defaultimp.layerList[2].worldSize = 200;</code></div><div class="line number10 index9 alt1"><code class="cpp plain">defaultimp.layerList[2].textureNames.push_back(</code><code class="cpp string">"growth_weirdfungus-03_diffusespecular.dds"</code><code class="cpp plain">);</code></div><div class="line number11 index10 alt2"><code class="cpp plain">defaultimp.layerList[2].textureNames.push_back(</code><code class="cpp string">"growth_weirdfungus-03_normalheight.dds"</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div><p>Сначала мы устанавливаем количество текстурных слоев ландшафта равным 3 с помощью вызова defaultimp.layerList.resize(3).&nbsp;Затем мы инициализируем каждый слой, устанавливая параметр 'worldSize' и определяя имена текстур.&nbsp;Параметр "worldSize" определяет насколько большой будет каждая текстура при мультитекстурировании ландшафта (сплаттинге).&nbsp;Меньшие значения будут увеличивать разрешение отрисованных текстурных слоев.</p>
<p>Генератор материала по-умолчанию берет по две текстуры на каждый слой:</p>
<ol><li>
		diffuse_specular -&nbsp;текстура рассеянного освещения с картой бликов в альфа-канале;</li>
<li>
		normal_height - карта нормалей с картой высот в альфа-канале.</li>
</ol><p>Смотрите&nbsp;<a href="http://www.ogre3d.org/tikiwiki/Ogre+Terrain+Textures" target="_blank">Ogre Terrain Textures</a>, если хотите знать как эти текстуры сделаны.&nbsp;Файлы, используемые в данном уроке, находятся в директории Samples дистрибутива Ogre.</p>
<p>Вся &nbsp;функция configureTerrainDefaults выглядит следующим образом:</p>
<div><div id="highlighter_890289" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::configureTerrainDefaults(Ogre::Light* light)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Configure global</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGlobals-&gt;setMaxPixelError(8);</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// testing composite map</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGlobals-&gt;setCompositeMapDistance(3000);</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Important to set these so that the terrain knows what to use for derived (non-realtime) data</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGlobals-&gt;setLightMapDirection(light-&gt;getDerivedDirection());</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGlobals-&gt;setCompositeMapAmbient(mSceneMgr-&gt;getAmbientLight());</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGlobals-&gt;setCompositeMapDiffuse(light-&gt;getDiffuseColour());</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Configure default import settings for if we use imported image</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Terrain::ImportData&amp; defaultimp = mTerrainGroup-&gt;getDefaultImportSettings();</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.terrainSize = 513;</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.worldSize = 12000.0f;</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.inputScale = 600;</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.minBatchSize = 33;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.maxBatchSize = 65;</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// textures</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList.resize(3);</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[0].worldSize = 100;</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[0].textureNames.push_back(</code><code class="cpp string">"dirt_grayrocky_diffusespecular.dds"</code><code class="cpp plain">);</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[0].textureNames.push_back(</code><code class="cpp string">"dirt_grayrocky_normalheight.dds"</code><code class="cpp plain">);</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[1].worldSize = 30;</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[1].textureNames.push_back(</code><code class="cpp string">"grass_green-01_diffusespecular.dds"</code><code class="cpp plain">);</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[1].textureNames.push_back(</code><code class="cpp string">"grass_green-01_normalheight.dds"</code><code class="cpp plain">);</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[2].worldSize = 200;</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[2].textureNames.push_back(</code><code class="cpp string">"growth_weirdfungus-03_diffusespecular.dds"</code><code class="cpp plain">);</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">defaultimp.layerList[2].textureNames.push_back(</code><code class="cpp string">"growth_weirdfungus-03_normalheight.dds"</code><code class="cpp plain">);</code></div><div class="line number31 index30 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><h3>
	Функция&nbsp;defineTerrain</h3>
<p style="font-size: 12px; ">А это функция defineTerrain:&nbsp;</p>
<div><div id="highlighter_362403" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::defineTerrain(</code><code class="cpp color1 bold">long</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">long</code> <code class="cpp plain">y)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::String filename = mTerrainGroup-&gt;generateFilename(x, y);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(Ogre::ResourceGroupManager::getSingleton().resourceExists(mTerrainGroup-&gt;getResourceGroup(), filename))</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup-&gt;defineTerrain(x, y);</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Image img;</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">getTerrainImage(x % 2 != 0, y % 2 != 0, img);</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup-&gt;defineTerrain(x, y, &amp;img);</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainsImported = </code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number15 index14 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p style="font-size: 12px; ">Эта функция простая, но "умная":&nbsp;сначала она узнает у объекта TerrainGroup, какое имя файла тот использует при генерации ландшафта,&nbsp;а затем проверяет, есть ли файл с таким именем в нашей группе ресурсов.&nbsp;И если он там есть, значит мы уже сгенерировали двоичный файл данных с ландшафтом и таким образом нет необходимости импортировать его из изображения.&nbsp;Если же его там нет, это означает, что мы должны сгенерировать ландшафт, а для этого загрузить изображение и использовать его для определения ландшафта.</p>
<p style="font-size: 12px; ">Функция defineTerrain использует маленькую вспомогательную функцию, называемую getTerrainImage(). Рассмотрим её ниже.</p>
<h3>
	Функция getTerrainImage</h3>
<p>Поскольку эта функция действительно мала и используется только один раз, она определена в файле реализации как статическая локальная функция:</p>
<div><div id="highlighter_314737" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">getTerrainImage(</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">flipX, </code><code class="cpp color1 bold">bool</code> <code class="cpp plain">flipY, Ogre::Image&amp; img)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">img.load(</code><code class="cpp string">"terrain.png"</code><code class="cpp plain">, Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(flipX)</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">img.flipAroundY();</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(flipY)</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">img.flipAroundX();</code></div><div class="line number8 index7 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>Функция загружает 'terrain.png' из архива с ресурсами, зеркально отражая ее при необходимости.</p>
<p>Замечание: отражение необходимо для имитации бесшовного ландшафта, так что вы можете сделать неограниченный по размерам ландшафт, используя всего одну карту высот (heightmap) размером 513x513 - это просто трюк. Если карты высот вашего ландшафта уже бесшовные, то вы не должны их отражать, просто определите собственные карты высот для каждого куска ландшафта. В этом уроке мы используем объект TerrainGroup размером 1x1 (посмотрите на функцию createScene()), так что на самом деле этот код не используется.</p>
<h3>
	Функция initBlendMaps</h3>
<p>Вы помните три типа слоев ландшафта, определенных в configureTerrainDefaults()? Теперь мы смешаем их на основе высоты тайла. В настоящем проекте вы можете использовать альфакарту сплаттинга, хранящуюся в каналах RGBA в файле или файлах, которые отделены от карты высот (heightmap).</p>
<p>Ниже приведена функция initBlendMaps во всей своей полноте:</p>
<div><div id="highlighter_121834" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::initBlendMaps(Ogre::Terrain* terrain)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::TerrainLayerBlendMap* blendMap0 = terrain-&gt;getLayerBlendMap(1);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::TerrainLayerBlendMap* blendMap1 = terrain-&gt;getLayerBlendMap(2);</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Real minHeight0 = 70;</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Real fadeDist0 = 40;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Real minHeight1 = 70;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Real fadeDist1 = 15;</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">float</code><code class="cpp plain">* pBlend0 = blendMap0-&gt;getBlendPointer();</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">float</code><code class="cpp plain">* pBlend1 = blendMap1-&gt;getBlendPointer();</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(Ogre::uint16 y = 0; y &lt; terrain-&gt;getLayerBlendMapSize(); ++y)</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(Ogre::uint16 x = 0; x &lt; terrain-&gt;getLayerBlendMapSize(); ++x)</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Real tx, ty;</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blendMap0-&gt;convertImageToTerrainSpace(x, y, &amp;tx, &amp;ty);</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Real height = terrain-&gt;getHeightAtTerrainPosition(tx, ty);</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Ogre::Real val = (height - minHeight0) / fadeDist0;</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">val = Ogre::Math::Clamp(val, (Ogre::Real)0, (Ogre::Real)1);</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*pBlend0++ = val;</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">val = (height - minHeight1) / fadeDist1;</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">val = Ogre::Math::Clamp(val, (Ogre::Real)0, (Ogre::Real)1);</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*pBlend1++ = val;</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blendMap0-&gt;dirty();</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blendMap1-&gt;dirty();</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blendMap0-&gt;update();</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">blendMap1-&gt;update();</code></div><div class="line number32 index31 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>В этом уроке мы не будем углубляться в подробности того, как она работает. Достаточно знать то, что функция использует высоту ландшафта для сплаттинга трех его слоев. Обратите внимание на использование методов getLayerBlendMap() и getBlendPointer().</p>
<h3>
	Компиляция и запуск - часть 1</h3>
<p>Пойдем дальше - скомпилируйте и запустите приложение. Вы должны получить неплохо выглядящий ландшафт.</p>
<p>Однако, Вы можете улучшить ваше приложение, сделав три добавления к нему:</p>
<ol><li>
		Индикатор генерации ландшафта;</li>
<li>
		Сохранение ландшафта;</li>
<li>
		Очистка за собой.</li>
</ol><p>Во-первых, для реализации улучшений, добавим новый член данных в класс BasicTutorial3:</p>
<div><div id="highlighter_217404" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">OgreBites::Label* mInfoLabel;</code></div></div></td></tr></tbody></table></div></div><p>Во-вторых необходимо переопределить три функции в нём:</p>
<ol><li>
		frameRenderingQueued - для показа процесса генерации ландшафта и сохранения сгенерированной версии;</li>
<li>
		createFrameListener -&nbsp;для создания метки с информацией;</li>
<li>
		destroyScene -&nbsp;для подчистки за собой.</li>
</ol><p>Итак, без лишних слов:</p>
<h3>
	Функция frameRenderingQueued</h3>
<div><div id="highlighter_437402" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp color1 bold">bool</code> <code class="cpp plain">BasicTutorial3::frameRenderingQueued(</code><code class="cpp keyword bold">const</code> <code class="cpp plain">Ogre::FrameEvent&amp; evt)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">bool</code> <code class="cpp plain">ret = BaseApplication::frameRenderingQueued(evt);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(mTerrainGroup-&gt;isDerivedDataUpdateInProgress())</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTrayMgr-&gt;moveWidgetToTray(mInfoLabel, OgreBites::TL_TOP, 0);</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mInfoLabel-&gt;show();</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(mTerrainsImported)</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mInfoLabel-&gt;setCaption(</code><code class="cpp string">"Building terrain, please wait..."</code><code class="cpp plain">);</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mInfoLabel-&gt;setCaption(</code><code class="cpp string">"Updating textures, patience..."</code><code class="cpp plain">);</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTrayMgr-&gt;removeWidgetFromTray(mInfoLabel);</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mInfoLabel-&gt;hide();</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(mTerrainsImported)</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainGroup-&gt;saveAllTerrains(</code><code class="cpp keyword bold">true</code><code class="cpp plain">);</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mTerrainsImported = </code><code class="cpp keyword bold">false</code><code class="cpp plain">;</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">ret;</code></div><div class="line number30 index29 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>Во-первых, мы спрашиваем наш TerrainGroup, работает ли он над генерацией ландшафта: isDerivedDataUpdateInProgress.&nbsp;Если работает, то покажем информационную метку с правильной подписью.&nbsp;А если нет - проверим, импортировали ли мы новый ландшафт.&nbsp;Если да, сохраним все куски ландшафта, чтобы в следующий раз, при запуске нашего приложения, пропустить процесс генерации.</p>
<h3>
	Функция&nbsp;createFrameListener</h3>
<p>Мы переопределяем эту функцию, поскольку нам нужно добавить новую информационную метку к нашему объекту mTrayMgr класса OgreBites::SdkTrayManager.&nbsp;Так как BaseApplication конструирует объект mTrayMgr в функции createFrameListener, мы не можем добавить ее (функцию createFrameListener) в нашу функцию "createScene", поскольку createFrameListener вызывается "после" функции createScene...</p>
<p>На самом деле, всё очень просто:</p>
<div><div id="highlighter_546346" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::createFrameListener(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">BaseApplication::createFrameListener();</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">mInfoLabel = mTrayMgr-&gt;createLabel(OgreBites::TL_TOP, </code><code class="cpp string">"TInfo"</code><code class="cpp plain">, </code><code class="cpp string">""</code><code class="cpp plain">, 350);</code></div><div class="line number6 index5 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>Вызовем метод BaseApplication::createFrameListener, а затем создадим нашу информационную метку.</p>
<h3>
	Функция&nbsp;destroyScene</h3>
<p>Здесь мы подчищаем мусор после себя:&nbsp;</p>
<div><div id="highlighter_409993" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">BasicTutorial3::destroyScene(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">OGRE_DELETE mTerrainGroup;</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">OGRE_DELETE mTerrainGlobals;</code></div><div class="line number5 index4 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div><p>OGRE_NEW требует использования OGRE_DELETE.</p>
<h3>
	Компиляция и запуск - часть 2</h3>
<p>Если Вы сейчас скомпилируете и запустите приложение, то увидите информационную метку, сообщающую что TerrainGroup занята генерацией ландшафта.&nbsp;Когда метка исчезнет, TerrainGroup сохранит этот ландшафт.&nbsp;Вы, возможно, обратите внимание, что не можете выйти из программы во время процесса генерации ландшафта.&nbsp;Однако, если Вы запустите программу во второй раз, то не получите сообщения вовсе, и процесс запуска пройдет намного быстрее, поскольку мы напрямую загружаем уже сгенерированный файл с ландшафтом. Перейдите в папку OGRE_HOME/media. Там Вы должны увидеть файл "BasicTutorial3Terrain_00000000.dat"...</p>
<h2>
	Небо</h2>
<p>Ogre предоставляет три различных типа неба: SkyBox, SkyDome, и SkyPlane.&nbsp;Рассмотрим подробно каждый из них.</p>
<h3>
	SkyBox (небесный куб)</h3>
<p>SkyBox - обычно это гигантский куб, который окружает все объекты в сцене.&nbsp;Лучший способ описать его - просто показать.&nbsp;Добавьте эту строку кода в метод createScene:</p>
<div><div id="highlighter_870429" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyBox(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, </code><code class="cpp string">"Examples/SpaceSkyBox"</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите программу. Нравиться?&nbsp;Заметим, что SkyBox получился зернистый, потому что используемая текстура низкого разрешения; SkyBox высокого разрешения выглядит намного лучше. Для SkyBox&nbsp;имеется несколько полезных параметров, которые можно установить при вызове <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1SceneManager.html#Ogre_1_1SceneManagera82" target="_blank">setSkyBox</a>.&nbsp;Первый - показывать или нет SkyBox.&nbsp;Если позже Вам потребуется отключить SkyBox, просто вызовите "mSceneMgr-&gt;setSkyBox(false, "");".&nbsp;Второй параметр - скрипт материала, который использует SkyBox.</p>
<p>Третий и четвертый параметры setSkyBox весьма важны для понимания работы неба.&nbsp;Третий параметр устанавливает расстояние, на которое будут отдалены стенки куба от камеры, а четвертый указывает, должен ли SkyBox рисоваться до отрисовки сцены или после.&nbsp;Итак, давайте посмотрим, что получится, если Вы смените расстояние до SkyBox со значения по умолчанию в 5000 единиц на что-то более близкое:</p>
<div><div id="highlighter_342149" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyBox(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, </code><code class="cpp string">"Examples/SpaceSkyBox"</code><code class="cpp plain">, 10);</code></div></div></td></tr></tbody></table></div></div><p>Ничего не изменилось! Это потому, что четвертый параметр, обеспечивающий отрисовку SkyBox до сцены, по умолчанию установлен в true.&nbsp;Если SkyBox рисуется первым, а затем что-то еще отрисовывается после него (вроде нашего ландшафта), то оно будет нарисовано поверх куба, таким образом получается, что SkyBox всегда появляется на фоне.&nbsp;Обратите внимание, что Вы не должны устанавливать расстояние до SkyBox ближе, чем ближняя плоскость отсечения камеры, иначе Вы не увидете SkyBox!&nbsp;В действительности рендерить SkyBox первым не всегда имеет смысл, из-за того что он отрисовывается целиком.&nbsp;Когда Вы рисуете его последним, рисуются только видимые части, что дает небольшой прирост производительности.&nbsp;Поэтому давайте попробуем сделать так, чтобы наш SkyBox рисовался последним:</p>
<div><div id="highlighter_309949" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyBox(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, </code><code class="cpp string">"Examples/SpaceSkyBox"</code><code class="cpp plain">, 5000, </code><code class="cpp keyword bold">false</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div><p>Все выглядит как и прежде, но теперь те части SkyBox, которые невидимы, не отрисовываются.&nbsp;Однако есть одна вещь, заставляющая осторожно использовать эту технику.&nbsp;Если Вы установите SkyBox слишком близко к камере, то можете обрезать часть геометрии сцены. Для примера попробуйте это сделать:</p>
<div><div id="highlighter_565505" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyBox(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, </code><code class="cpp string">"Examples/SpaceSkyBox"</code><code class="cpp plain">, 100, </code><code class="cpp keyword bold">false</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div><p>Как Вы теперь можете видеть, ландшафт "прорезается" сквозь SkyBox.&nbsp;Определенно не то, что мы хотели. Если Вы используете SkyBox в своем приложении, то решите, как будите его использовать.&nbsp;Ускорение, которое получается от отрисовки SkyBox после ландшафта, очень невелико, и Вы должны быть осторожны, чтобы он не загораживал вашу геометрию (если Вы не для этого его делаете).&nbsp;Проще говоря, оставить все параметры, после второго, по умолчанию - очень безопасный выбор.</p>
<h3>
	SkyDome (небосвод)</h3>
<p>SkyDome очень похожи на SkyBoxe, и Вы можете использовать их, вызвав <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1SceneManager.html#Ogre_1_1SceneManagera86" target="_blank">setSkyDome</a>.&nbsp;Точно так же создается и отрисовывается гигантский куб вокруг камеры, но огромное различие в том, что текстура "проектируется" на SkyBox сферическим способом.&nbsp;И хотя Вы глядите на куб, выглядит он так, как будто текстура обернута вокруг поверхности сферы.&nbsp;Главный недостаток этого метода состоит в том, что нижняя часть куба будет нетекстурированной, поэтому вам всегда нужно иметь некоторый ландшафт, который бы скрывал основание.</p>
<p>Пример текстуры, которую Ogre предоставляет для SkyDome, позволит вам ясно это увидеть.&nbsp;Уберите вызов setSkyBox из createScene и добавьте вместо него следующий код:</p>
<div><div id="highlighter_298394" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyDome(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, </code><code class="cpp string">"Examples/CloudySky"</code><code class="cpp plain">, 5, 8);</code></div></div></td></tr></tbody></table></div></div><p>Когда вы запустите пример, переместите камеру в центр ландшафта как можно ближе к поверхности (так будет выглядеть нагляднее).&nbsp;После занятия позиции нажмите клавишу R, чтобы переключится в режим обзора полигональной сетки.&nbsp;Как видите, мы все же смотрим на куб (без основания), но выглядит он так, как если бы облака были обернуты вокруг верхней половины сферы.&nbsp;Также отметим, что перемещение облаков - свойство материала "Examples/CloudySky", а вовсе не объекта SkyDome.</p>
<p>Первые два параметра setSkyDome те же, что и у setSkyBox,если Вы захотите выключить SkyDome, просто вызовите "mSceneMgr-&gt;setSkyDome(false, "");".&nbsp;Третий параметр - это значение кривизны используемое для SkyDome.&nbsp;Руководство по API <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1SceneManager.html#Ogre_1_1SceneManagera86" target="_blank">предлагает</a> использовать значения между 2 и 65: меньшие значения для лучшего эффекта расстояния, большие - для меньших искажений и лучшего сглаживания.&nbsp;Установите в третий параметр значения 2 и 65 и посмотрите на различие.&nbsp;</p>
<p>Четвертый параметр - количество повторов текстуры, которое Вы должны будите настроить в зависимости от размера вашей текстуры.&nbsp;Обратите внимание, что этот параметр не целочисленный, а значение типа Real (c плавающей точкой).&nbsp;Установите в четвёртый параметр значение 1.234, т.е. повторите текстуру 1.234 раз, так как при такой установке она выглядит достаточно хорошо в приложении.&nbsp;Пятый и шестой параметры - расстояние и флаг рисования небосвода первым, соответственно. Их мы уже описали в разделе, посвященном SkyBox.</p>
<h3>
	SkyPlane (плоскость неба)</h3>
<p>SkyPlane очень отличается от SkyBoxe и SkyDome. Вместо куба на котором отрисовываются текстуры неба, используется одна плоскость. Заметьте, что для всех следующих конфигураций SkyPlane вам нужно быть повернутым куда-то по направлению к середине ландшафта, близко к земле. Уберите весь код SkyDome из createScene. Первая вещь, которую необходимо сделать - создать плоскость и повернуть ее лицом вниз. У метода setSkyPlane, который мы будем вызывать, нет параметра distance как у SkyBox и SkyDome. Вместо этого, этот параметр установлен в переменной d плоскости:</p>
<div><div id="highlighter_558111" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">Ogre::Plane plane;</code></div><div class="line number2 index1 alt1"><code class="cpp plain">plane.d = 1000;</code></div><div class="line number3 index2 alt2"><code class="cpp plain">plane.normal = Ogre::Vector3::NEGATIVE_UNIT_Y;</code></div></div></td></tr></tbody></table></div></div><p>Теперь, когда мы определили плоскость, создадим объект SkyPlane. Обратите внимание, что четвертый параметр - размер SkyPlane (в данном случае 1500x1500 единиц), а пятый параметр указывает количество повторов текстуры:</p>
<div><div id="highlighter_344423" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyPlane(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, plane, </code><code class="cpp string">"Examples/SpaceSkyPlane"</code><code class="cpp plain">, 1500, 75);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите программу. Есть две проблемы, которые создает использование SkyPlane в данном примере. Во-первых, используемая текстура низкого разрешения, поэтому она плохо подвергается тайлингу (размножению). Это можно исправить, просто создав хорошую текстуру высокого разрешения для неба, которая будет тайлится хорошо. Однако, основная проблема с этой методикой состоит в том, что если Вы взгляните на горизонт, то увидите, где оканчивается SkyPlane. И даже если у Вас есть хорошая текстура, она совсем не станет выглядеть лучше если Вы будете смотреть на горизонт. В основном использование SkyPlane оправдано, только тогда, когда у вас есть высокие стены (или горы) вокруг точки обзора. Использование SkyPlane в такой ситуации значительно менее графически накладно, чем создание полного SkyBox или SkyDome.</p>
<p>К счастью, это не единственное, что можно сделать с нашим SkyPlane.Шестой параметр setSkyPlane - уже знакомый нам параметр "рисовать первым" ("renderFirst"), который мы уже обсудили в разделах, посвященным SkyBox и SkyDome. Седьмой параметр позволяет определить кривизну SkyBox, т.е. вместо плоскости позволяет использовать кривую поверхность. Мы также должны теперь определить количество сегментов по осям x и y, используемых для создания SkyPlane (первоначально это один большой квадрат, но искривляя его, мы вынуждены разбить плоскость на маленькие квадраты). Восьмой и девятый параметр этой функции - число сегментов по x и y соответственно:</p>
<div><div id="highlighter_767612" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyPlane(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, plane, </code><code class="cpp string">"Examples/SpaceSkyPlane"</code><code class="cpp plain">, 1500, 50, </code><code class="cpp keyword bold">true</code><code class="cpp plain">, 1.5f, 150, 150);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите приложение. Теперь наша SkyPlane выглядит намного лучше, хотя над тайлингом все еще нужно поработать. Также, Вы можете использовать SlyPlane с материалом облаков:</p>
<div><div id="highlighter_608759" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyPlane(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, plane, </code><code class="cpp string">"Examples/CloudySky"</code><code class="cpp plain">, 1500, 40, </code><code class="cpp keyword bold">true</code><code class="cpp plain">, 1.5f, 150, 150);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите приложение. Движение облаков и способ их повтора, заставляет выглядеть их хуже, чем на SkyDome, особенно когда Вы приближаетесь близко к краю ландшафта и глядите на горизонт.</p>
<p>И ещё одно замечание: Вы можете очистить SkyPlane вызвав "mSceneMgr-&gt;setSkyPlane(false, Ogre::Plane(), "");".</p>
<h3>
	Какой тип неба использовать?</h3>
<p>Какой тип неба использовать, целиком зависит от вашего приложения. Если Вам нужно видеть все вокруг себя, даже в отрицательном направлении оси y (напомним, ось y направлена вверх), тогда у Вас остается только один реальный выбор - использование SkyBox. Если у вас есть ландшафт или какой-то вид пола, блокирующий обзор в отрицательном направлении оси y, то использование SkyDome даст наиболее реалистичные результаты. Для областей, где Вы не можете видеть горизонт (такие, как долина, окруженная горами со всех сторон, или внутренний двор замка) SkyPlane даст очень хорошо выглядящие результаты при минимальной нагрузке на GPU. Но основная причина использования SkyPlane, как мы увидим в следующем разделе - её использование отлично сочетается с эффектами тумана.</p>
<p>Это всего лишь указания. В Вашем приложении Вам следует экспериментировать и использовать то, что выглядит лучше всего.</p>
<h2>
	Туман</h2>
<h3>
	Введение</h3>
<p>Наиболее важная вещь, которую нужно знать о настройке тумана, это то, что в действительности не создается сущности (entity) тумана в пустом пространстве. Напротив, это просто фильтр применяемый на все объекты, на которые Вы сейчас смотрите.&nbsp;Из этого следует то, что когда Вы смотрите в никуда, фактически тумана Вы не видите (туман присутствует только на объектах).&nbsp;На самом деле Вы увидите всего лишь цвет фона области просмотра.&nbsp;Поэтому, для того, чтобы туман выглядел правильно, необходимо установить цвет фона соответствующим текущему цвету тумана.</p>
<p>Существуют два основных типа тумана: линейный и экспоненциальный.&nbsp;Линейный туман сгущается по линейному закону, в то время как экспоненциальный сгущается экспоненциально (на каждую единицу расстояния плотность тумана увеличивается больше, чем за предыдущую единицу).&nbsp;Легче увидеть разницу, чем объяснить её, поэтому перейдем к примерам.</p>
<h3>
	Типы тумана</h3>
<p>Первым типом тумана, который мы рассмотрим, будет линейный - это самая легкая для понимания разновидность тумана.&nbsp;Вначале установим фоновый цвет области просмотра&nbsp;после вызова setWorldGeometry.&nbsp;Мы могли бы сделать это, переопределив функцию createViewport (как мы сделали в прошлом уроке), но иногда необходимо установить его (фоновый цвет)&nbsp;без пересоздания&nbsp;&nbsp;каждый раз&nbsp;области просмотра.&nbsp;Поэтому мы сделаем вот так:&nbsp;</p>
<div><div id="highlighter_891620" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">Ogre::ColourValue fadeColour(0.9, 0.9, 0.9);</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mWindow-&gt;getViewport(0)-&gt;setBackgroundColour(fadeColour);</code></div></div></td></tr></tbody></table></div></div><p>Вы можете использовать функцию-член <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1RenderTarget.html#Ogre_1_1RenderWindowa22" target="_blank">getNumViewports</a> для получения количества областей просмотра и итерации по ним, если имеете более одной области просмотра, но так как это редко имеет место (и так как мы знаем, что у нас есть только одна область просмотра), то можем просто напрямую получить её.&nbsp;После установки цвета фона мы можем создать туман:&nbsp;</p>
<div><div id="highlighter_683910" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setFog(Ogre::FOG_LINEAR, fadeColour, 0.0, 50, 500);</code></div></div></td></tr></tbody></table></div></div><p>Первый параметр <a href="http://www.ogre3d.org/docs/api/html/classOgre_1_1SceneManager.html#Ogre_1_1SceneManagera90" target="_blank">setFog</a> - тип тумана (в данном случае линейный).&nbsp;Второй параметр - цвет тумана, который мы используем (в данном случае очень очень светлый серый ("fadeColour") или "WhiteSmoke" для C#).&nbsp;Третий параметр не используется линейным туманом. Четвертый и пятый параметры определяют диапазон, в котором туман будет сгущаться.&nbsp;В данном случае мы установили начальную позицию тумана в 50 единиц, а конечную - в 500 единиц.&nbsp;Это означает, что в диапазоне от 0 до 50, перед камерой нет тумана. А в диапазоне от 50 до 500 единиц, туман сгущается по линейному закону.&nbsp;На расстоянии 500 единиц от камеры, Вы не сможете увидеть ничего, кроме тумана. Скомпилируйте и запустите приложение.</p>
<p>Другим типом типом тумана, который используется в Ogre, является экспоненциальный туман. Вместо установки начальной и конечной границ для тумана, мы устанавливаем его плотность (четвертый и пятый параметры не используются). Замените предыдущий вызов setFog этим:</p>
<div><div id="highlighter_133677" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setFog(Ogre::FOG_EXP, fadeColour, 0.005);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите приложение.</p>
<p>В этом случае туман выглядит по другому.&nbsp;Существует также другая экспоненциальная функция тумана, которая "жестче" первой (т.е. туман становится намного плотнее с каждой единицей расстояния от камеры, чем при использовании первой функции).&nbsp;Обратите внимание, что видимая плотность тумана возрастает еще быстрее при использовании FOG_EXP2.&nbsp;Замените предыдущий вызов функции setFog этим:</p>
<div><div id="highlighter_687642" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">mSceneMgr-&gt;setFog(Ogre::FOG_EXP2, fadeColour, 0.003);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите приложение снова.&nbsp;Туман, по большей части, взаимозаменяем между этими тремя предоставляемыми Ogre функциями (FOG_LINEAR, FOG_EXP и FOG_EXP2).&nbsp;Вам стоит поэкспериментировать со всеми этими функциями (типами) тумана, и посмотреть, при какой туман будет выглядеть наилучшим образом в вашем приложении.</p>
<h3>
	Туман и небо</h3>
<p>Вы можете столкнуться с некоторыми интересными проблемами, когда будете пытаться использовать туман с SkyBox и SkyDome.&nbsp;Так как SkyDome и SkyBoxe просто кубы, использование их с туманом проблематично, так как туман работает сферическим образом.&nbsp;Удалите содержимое метода createScene.&nbsp;Если мы разумно выберем наш SkyDome и параметры тумана, то сможем непосредственно увидеть проблему:</p>
<div><div id="highlighter_234179" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">Ogre::ColourValue fadeColour(0.9, 0.9, 0.9);</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mSceneMgr-&gt;setFog(Ogre::FOG_LINEAR, fadeColour, 0.0, 10, 1200);</code></div><div class="line number3 index2 alt2"><code class="cpp plain">mWindow-&gt;getViewport(0)-&gt;setBackgroundColour(fadeColour);</code></div><div class="line number4 index3 alt1"><code class="cpp plain">mSceneMgr-&gt;setSkyDome(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, </code><code class="cpp string">"Examples/CloudySky"</code><code class="cpp plain">, 5, 8, 500);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите приложение.&nbsp;Если Вы подвигаете камерой, то увидите как различные части SkyDome протыкают туман в зависимости от того, на какую часть SkyDome Вы смотрите (обратите внимание на синий цвет, проступающий на сторонах, но не в середине).</p>
<p>Это, конечно, не то, что мы хотим. Но есть другой вариант - использовать SkyPlane.&nbsp;Замените код в createScene этим:</p>
<div><div id="highlighter_301405" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">Ogre::ColourValue fadeColour(0.9, 0.9, 0.9);</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mSceneMgr-&gt;setFog(Ogre::FOG_LINEAR, fadeColour, 0.0, 10, 1200);</code></div><div class="line number3 index2 alt2"><code class="cpp plain">mWindow-&gt;getViewport(0)-&gt;setBackgroundColour(fadeColour);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp plain">Ogre::Plane plane;</code></div><div class="line number6 index5 alt1"><code class="cpp plain">plane.d = 100;</code></div><div class="line number7 index6 alt2"><code class="cpp plain">plane.normal = Ogre::Vector3::NEGATIVE_UNIT_Y;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyPlane(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, plane, </code><code class="cpp string">"Examples/CloudySky"</code><code class="cpp plain">, 500, 20, </code><code class="cpp keyword bold">true</code><code class="cpp plain">, 0.5, 150, 150);</code></div></div></td></tr></tbody></table></div></div><p>Теперь выглядит нормально.&nbsp;Если мы взглянем вверх, то сможем увидеть небо (которое видно в реальной жизни), причём туман не протыкает его забавными способами.&nbsp;Независимо от того, используете ли вы искривление или нет, это решает нашу проблему и даёт возможность пользователю увидеть горизонт, где SkyPlane выглядит неправильно.</p>
<p>Есть возможность заставить туман не затрагивать небо полностью, но для этого потребуется изменить скрипт материала для текстуры неба.&nbsp;Это выходит за рамки данного урока, но на будущее, <a href="http://www.ogre3d.org/docs/manual/manual_16.html#SEC64" target="_blank">этот</a> параметр отключает туман для материала.</p>
<h3>
	Туман в качестве темноты</h3>
<p>Вы можете не использовать небо вообще, когда устанавливаете туман, потому что если туман достаточно плотный, то Вы в любом случае не увидите неба.&nbsp;Трюк с туманом, который описан выше, довольно изящный прием, который может быть полезен в некоторых случаях. Вместо установки туману яркого цвета, укажем очень темный и посмотрим, что получится (заметьте, что мы установили расстояние до SkyPlane всего в 10 единиц, что ближе, чем начало тумана):</p>
<div><div id="highlighter_394032" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">Ogre::ColourValue fadeColour(0.1, 0.1, 0.1);</code></div><div class="line number2 index1 alt1"><code class="cpp plain">mWindow-&gt;getViewport(0)-&gt;setBackgroundColour(fadeColour);</code></div><div class="line number3 index2 alt2"><code class="cpp plain">mSceneMgr-&gt;setFog(Ogre::FOG_LINEAR, fadeColour, 0.0, 10, 150);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp plain">Ogre::Plane plane;</code></div><div class="line number6 index5 alt1"><code class="cpp plain">plane.d = 10;</code></div><div class="line number7 index6 alt2"><code class="cpp plain">plane.normal = Ogre::Vector3::NEGATIVE_UNIT_Y;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp plain">mSceneMgr-&gt;setSkyPlane(</code><code class="cpp keyword bold">true</code><code class="cpp plain">, plane, </code><code class="cpp string">"Examples/SpaceSkyPlane"</code><code class="cpp plain">, 100, 45, </code><code class="cpp keyword bold">true</code><code class="cpp plain">, 0.5, 150, 150);</code></div></div></td></tr></tbody></table></div></div><p>Скомпилируйте и запустите приложение.</p>
<p>Не так уж и ужасно. Конечно, как только Вы сможете, лучше используйте освещение вместо этого трюка, но этот хак показывает как гибко можно настроить туман, а также некоторые из интересных вещей, которые можно сделать с движком.&nbsp;Использование черного тумана может быть интересным путем создания эффектов заклинаний "слепота" или "тьма", если Вы пишете игру c видом от первого лица.</p>
<h3>
	Вывод</h3>
<p>Теперь у вас должно сложиться базовое понимание ландшафта (Terrain), неба (Sky) и тумана (Fog).</p>
<hr><p><strong>Авторы урока:</strong>&nbsp;tothmarcell97, SRombauts, progman, peters, noirenex, montaropdf, matti_kariluoma, Latin1, JacobM, jacmoe, Harkathmaker и Beauty.</p>
<p><strong>Переводчики:</strong>&nbsp;oYASo, wuffur, anne_bale, Mingun, ghostintheshell, PoqXert, alexx_x, proVIDec, cin, slymit.</p>
<p><strong>Редактор:</strong> slymit.</p>
<hr><p>Оригинал статьи:&nbsp;<a href="http://www.ogre3d.org/tikiwiki/Basic+Tutorial+3&structure=Tutorials" target="_blank">Basic Tutorial 3: Terrain, Sky, and Fog</a>.</p>
<hr><p>Материал данного руководства распространяется по лицензии на условиях&nbsp;<a href="http://www.ogre3d.org/tikiwiki/Creative+Commons+Attribution-ShareAlike+License&copyrightpage=Basic%20Tutorial%203" target="_blank">Creative Commons Attribution-ShareAlike License</a>.&nbsp;</p>
<p>Весь исходный код в рамках данной статьи считается <a href="http://www.ogre3d.org/tikiwiki/tiki-index?page=Public%20Domain%20Unlicense" target="_blank">общественным достоянием</a>.</p>
</div></div></div><div class="field field-name-field-doctype field-type-taxonomy-term-reference field-label-above"><div class="field-label">Категория:&nbsp;</div><div class="field-items"><div class="field-item even"><a href="http://ogre3d.su/taxonomy/term/44" typeof="skos:Concept" property="rdfs:label skos:prefLabel">Страница руководства</a></div></div></div>  <div id="book-navigation-40" class="book-navigation">
    
        <div class="page-links clearfix">
              <a href="http://ogre3d.su/Basic_Tutorial_1" class="page-previous" title="На предыдущую страницу">‹ Глава 1 — Введение в основные принципы Ogre: объекты SceneManager, SceneNode и Entity</a>
                    <a href="http://ogre3d.su/base_tutorials" class="page-up" title="Перейти к родительской странице">Вверх</a>
                </div>
    
  </div>
  </div>

  <div class="clearfix">
          <div class="links"><ul class="links inline"><li class="comment_forbidden first last"><span><a href="http://ogre3d.su/user/login?destination=node/35%23comment-form">Войдите</a> или <a href="http://ogre3d.su/user/register?destination=node/35%23comment-form">зарегистрируйтесь</a>, чтобы отправлять комментарии</span></li>
</ul></div>
    
      </div>

</div>
  </div>
</div>
  </div>
          </div>
                      <div class="region region-footer">
    <div id="block-system-powered-by" class="block block-system clearfix">

    
  <div class="content">
    <span>Создано на <a href="http://drupal.org/">Drupal</a></span>  </div>
</div>
<div id="block-block-1" class="block block-block clearfix">

    
  <div class="content">
    <div style="height: 45px; valign: middle;">
	<a href="http://www.host96.ru/" target="_new"><img alt="Бесплатный хостинг HOST96.ru" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/hostsitey2.png"></a> <a href="http://top.mail.ru/jump?from=2177054"><img height="40" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/counter" style="border:0;" width="88"></a> <a href="http://top100.rambler.ru/navi/2678525"><img src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/top100.cnt" style="border:0;"></a> <a href="http://www.gamedev.ru/top/"><img alt="Топ Разработка игр" height="31" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/saved_resource" style="border: 0;" width="88"></a></div>
  </div>
</div>
  </div>
      </div></div></div></div> <!-- /.left-corner, /.right-corner, /#squeeze, /#center -->

      
    </div> <!-- /#container -->
  </div> <!-- /#wrapper -->
  <script type="text/javascript" src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/syntaxhighlighter.min.js"></script>


<p></p><center><a href="http://www.host96.ru/" target="_new"><img src="./Глава 3 — Ландшафт, небо и туман   Ogre 3D_files/free96-6.png" alt="���������� ������� HOST96.ru"></a></center><p></p><div id="lightbox2-overlay" style="display: none;"></div>      <div id="lightbox" style="display: none;" class="lightbox2-alt-layout">        <div id="outerImageContainer" style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);"><div id="modalContainer" style="display: none; padding: 5px;"></div><div id="frameContainer" style="display: none; padding: 5px;"></div><div id="imageContainer" style="display: none; padding: 5px;"><img id="lightboxImage" alt=""></div><div id="loading"><a href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" id="loadingLink"></a></div><div id="bottomNav"><a id="bottomNavClose" title="Close" href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);"></a><a id="bottomNavZoom" href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" style="bottom: 5px; right: 5px;"></a><a id="bottomNavZoomOut" href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" style="bottom: 5px; right: 5px;"></a></div></div>        <div id="imageDataContainer" class="clearfix" style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);">          <div id="imageData"><div id="hoverNav"><a id="prevLink" title="Previous" href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" style="padding-top: 5px;"></a><a id="nextLink" title="Далее" href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" style="padding-top: 5px;"></a></div><div id="imageDetails"><span id="caption"></span><span id="numberDisplay"></span><a id="lightshowPause" title="Pause Slideshow" href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" style="display: none;"></a><a id="lightshowPlay" title="Play Slideshow" href="http://ogre3d.su/base_tutorials/Basic_Tutorial_3#" style="display: none;"></a></div></div>        </div>      </div></body></html>