/*
	ReflectionCodeGenerator for Marshaller
*/
// File has been generated by ReflectionCodeGenerator version 1.18 build 46, at 2020_10_18 14:38:07.431
	
#pragma once

#include <string>
#include <map>
#include <functional>
#include "EntityManager.h"
#include "IncludeList.h"

namespace nsEntityManagerExtension
{
    class TEntityManagerExtension
    {
    public:
        static void SetComponent(nsECSFramework::TEntityManager* pEntMng,
            nsECSFramework::TEntityID eid, void* p, const std::string& typeName);
        static void* ViewComponent(nsECSFramework::TEntityManager* pEntMng,
            nsECSFramework::TEntityID eid, const std::string& typeName);
        static bool GetComponent(nsECSFramework::TEntityManager* pEntMng,
            nsECSFramework::TEntityID eid, void*& p, const std::string& typeName);
        static bool HasComponent(nsECSFramework::TEntityManager* pEntMng,
            nsECSFramework::TEntityID eid, const std::string& typeName);
        static void RemoveComponent(nsECSFramework::TEntityManager* pEntMng,
            nsECSFramework::TEntityID eid, const std::string& typeName);
    
    private:
        struct Data
        {
            std::string typeName;
            std::function<void(nsECSFramework::TEntityManager* pEntMng, nsECSFramework::TEntityID eid, void* p)> setFunc;
            std::function<void* (nsECSFramework::TEntityManager* pEntMng, nsECSFramework::TEntityID eid)> viewFunc;
            std::function<bool(nsECSFramework::TEntityManager* pEntMng, nsECSFramework::TEntityID eid, void*& p)> getFunc;
            std::function<bool(nsECSFramework::TEntityManager* pEntMng, nsECSFramework::TEntityID eid)> hasFunc;
            std::function<void(nsECSFramework::TEntityManager* pEntMng, nsECSFramework::TEntityID eid)> removeFunc;
        };
    
        static std::map<std::string, Data> mTypeNameMap;
    
        static void Init();
    };
}
